#pragma once

/* The convention about the hdlc logical channel usage agreed by uart socket and the Linux proxy. */
typedef enum
{
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_LAN = 0,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_WAN = 1,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_LAN_CONTROL_CHANNEL = 2,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_WAN_CONTROL_CHANNEL = 3,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_CONTROL_NW = 4,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_NW  = 5,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_NVM = 6,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_CONTROL_NW_2 = 7,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_NW_2  = 8,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_NVM2 = 9,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_CM_TEST_1 = 10,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_CM_TEST_2 = 11,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_MAX,
    UART_SOCKET_LOGICAL_CHANNEL_CONVENTION_UNDEFINED = 255
} UartSocketLogicalChannelConvention;

/* The commands provided by and the responses sent by the Linux proxy. */
typedef enum
{
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_OPEN,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_OPEN_CNF,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_CLOSE,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_CLOSE_CNF,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_GETMAC,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_GETMAC_CNF,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_START_READ,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_START_READ_CNF,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_STOP_READ,
    UART_SOCKET_GUEST_CONTROL_SOCKET_COMMAND_STOP_READ_CNF

} UartSocketGuestSocketCommand;
